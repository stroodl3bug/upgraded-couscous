sensor:
  - platform: template
    sensors:
      kk_battery:
        friendly_name: "Battery"
        unit_of_measurement: '%'
        value_template: "{{states.device_tracker.life360_kk.attributes.battery }}"
        icon_template: >-
          mdi:battery{% if is_state_attr('device_tracker.life360_kk', 'battery_charging', true) %}-charging{% else %}{% endif %}{% if 0<(state_attr('device_tracker.life360_kk', 'battery') | float / 10 ) | round(0) * 10 < 100%}-{{ (state_attr('device_tracker.life360_kk', 'battery') | float / 10 ) | round(0) * 10 }}{% else %}{% if (state_attr('device_tracker.life360_kk', 'battery') | float / 10 ) | round(0) * 10 == 0%}-outline{%else%}{% if is_state_attr('device_tracker.life360_kk', 'battery_charging', true) %}-100{% endif %}{% endif %}{% endif %}

      kk_wifi:
        friendly_name: "WiFi"
        value_template: >-
          {% if is_state_attr('device_tracker.life360_kk', 'wifi_on', true) %}
            on
          {% else %}
            off
          {% endif %}
        icon_template: >-
          {% if is_state_attr('device_tracker.life360_kk', 'wifi_on', true) %}
            mdi:wifi
          {% else %}
            mdi:wifi-off
          {% endif %}    

      kk_location:
        friendly_name: "Location"
        value_template: "{{states.device_tracker.life360_kk.attributes.address }}"
       
      kk_loc_since_time:
        friendly_name: "At Location Since Time"
        value_template: '{{as_timestamp(states.device_tracker.life360_kk.attributes.at_loc_since) | timestamp_custom("%H:%M")}}'

      kk_loc_since_date:
        friendly_name: "At Location Since Date"
        value_template: '{{as_timestamp(states.device_tracker.life360_kk.attributes.at_loc_since) | timestamp_custom("%A %d %b %Y")}}'

      hassio_last_boot:
        friendly_name: "Last Boot"
        value_template: '{{as_timestamp(states.sensor.last_boot.state) | timestamp_custom("%D %H:%M")}}'
      
      disk_use_total:
        value_template: >
          {{ (states('sensor.disk_free_home') | float + states('sensor.disk_use_home') | float) | round(1) }}
        unit_of_measurement: "GiB"

      hassio_uptime:
        entity_id:
          - sensor.time
        value_template: >
          {%- set dt = strptime(states('sensor.last_boot'),"%Y-%m-%dT%H:%M:%S%z") %}
          {%- set time =  (now().timestamp() - dt.timestamp()) | int %}
          {%- set minutes = ((time % 3600) // 60) %}
          {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %}
          {%- set hours = ((time % 86400) // 3600) %}
          {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %}
          {%- set days = (time // 86400) %}
          {%- set days = '{}d '.format(days) if days > 0 else '' %}
          {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
        

